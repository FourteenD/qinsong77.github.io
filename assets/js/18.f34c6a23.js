(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{480:function(a,s,t){a.exports=t.p+"assets/img/babel.069cab4f.png"},481:function(a,s,t){a.exports=t.p+"assets/img/core_js.76b267d6.png"},482:function(a,s,t){a.exports=t.p+"assets/img/webpack_progress.e3d06fa6.png"},526:function(a,s,t){"use strict";t.r(s);var e=t(25),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"webpack面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack面试题"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844904094281236487",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack面试题"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"从源码窥探webpack4-x原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从源码窥探webpack4-x原理"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844904046294204429",target:"_blank",rel:"noopener noreferrer"}},[a._v("从源码窥探Webpack4.x原理"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"webpack小书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack小书"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://www.timsrc.com/article/2/webpack-book",target:"_blank",rel:"noopener noreferrer"}},[a._v("webpack小书"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"webpack揭秘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack揭秘"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844903685407916039",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack揭秘"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"webpack中publicpath详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack中publicpath详解"}},[a._v("#")]),a._v(" Webpack中publicPath详解")]),a._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844903601060446221",target:"_blank",rel:"noopener noreferrer"}},[a._v("文章"),e("OutboundLink")],1)])]),a._v(" "),e("h3",{attrs:{id:"由浅入深配置webpack4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#由浅入深配置webpack4"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.im/post/6859888538004783118",target:"_blank",rel:"noopener noreferrer"}},[a._v("由浅入深配置webpack4"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"手写webpack核心原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写webpack核心原理"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.im/post/6854573217336541192",target:"_blank",rel:"noopener noreferrer"}},[a._v("手写webpack核心原理"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"体积减少80-释放webpack-tree-shaking的真正潜力"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#体积减少80-释放webpack-tree-shaking的真正潜力"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844903769646317576",target:"_blank",rel:"noopener noreferrer"}},[a._v("体积减少80%！释放webpack tree-shaking的真正潜力"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"vite-原理分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-原理分析"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6881078539756503047",target:"_blank",rel:"noopener noreferrer"}},[a._v("Vite 原理分析"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"前端工程化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844904132512317453",target:"_blank",rel:"noopener noreferrer"}},[a._v("前端工程化"),e("OutboundLink")],1)]),a._v(" "),e("p",[a._v("前端工程化可以分成四个方面来说，分别为模块化、组件化、规范化和自动化。")]),a._v(" "),e("h4",{attrs:{id:"模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[a._v("#")]),a._v(" 模块化")]),a._v(" "),e("p",[a._v("模块化是指将一个文件拆分成多个相互依赖的文件，最后进行统一的打包和加载，这样能够很好的保证高效的多人协作。其中包含")]),a._v(" "),e("ul",[e("li",[a._v("JS 模块化：CommonJS、AMD、CMD 以及 ES6 Module。")]),a._v(" "),e("li",[a._v("CSS 模块化：Sass、Less、Stylus、BEM、CSS Modules 等。其中预处理器和 BEM 都会有的一个问题就是样式覆盖。而 CSS Modules 则是通过 JS 来管理依赖，最大化的结合了 JS 模块化和 CSS 生态，比如 Vue 中的 style scoped。")]),a._v(" "),e("li",[a._v("资源模块化：任何资源都能以模块的形式进行加载，目前大部分项目中的文件、CSS、图片等都能直接通过 JS 做统一的依赖关系处理。")])]),a._v(" "),e("h4",{attrs:{id:"组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[a._v("#")]),a._v(" 组件化")]),a._v(" "),e("p",[a._v("不同于模块化，模块化是对文件、对代码和资源拆分，而组件化则是对 UI 层面的拆分。\n通常，我们会需要对页面进行拆分，将其拆分成一个一个的零件，然后分别去实现这一个个零件，最后再进行组装。\n在我们的实际业务开发中，对于组件的拆分我们需要做不同程度的考量，其中主要包括细粒度和通用性这两块的考虑。\n对于业务组件，你更多需要考量的是针对你负责业务线的一个适用度，即你设计的业务组件是否成为你当前业务的 “通用” 组件。")]),a._v(" "),e("h4",{attrs:{id:"规范化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范化"}},[a._v("#")]),a._v(" 规范化")]),a._v(" "),e("p",[a._v("正所谓无规矩不成方圆，一些好的规范则能很好的帮助我们对项目进行良好的开发管理。规范化指的是我们在工程开发初期以及开发期间制定的系列规范，其中又包含了")]),a._v(" "),e("ul",[e("li",[a._v("项目目录结构")]),a._v(" "),e("li",[a._v("编码规范：对于编码这块的约束，一般我们都会采用一些强制措施，比如 ESLint、StyleLint 等。")]),a._v(" "),e("li",[a._v("联调规范")]),a._v(" "),e("li",[a._v("文件命名规范")]),a._v(" "),e("li",[a._v("样式管理规范：目前流行的样式管理有 BEM、Sass、Less、Stylus、CSS Modules 等方式。")]),a._v(" "),e("li",[a._v("git flow 工作流：其中包含分支命名规范、代码合并规范等。")]),a._v(" "),e("li",[a._v("定期 code review")]),a._v(" "),e("li",[a._v("… 等等")])]),a._v(" "),e("h4",{attrs:{id:"自动化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动化"}},[a._v("#")]),a._v(" 自动化")]),a._v(" "),e("p",[a._v("从最早先的 grunt、gulp 等，再到目前的 webpack、parcel。这些自动化工具在自动化合并、构建、打包都能为我们节省很多工作。而这些只是前端自动化其中的一部分，前端自动化还包含了持续集成、自动化测试等方方面面。")]),a._v(" "),e("h2",{attrs:{id:"babel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[a._v("#")]),a._v(" Babel")]),a._v(" "),e("p",[e("strong",[a._v("Babel is a JavaScript compiler.")])]),a._v(" "),e("p",[a._v("Babel就是一个JavaScript编译器，babel编译分为三个阶段，"),e("strong",[a._v("解析（parse），转换（transform），生成（generate）")]),a._v("。\nBabel本身不支持转换，转换是通过一个个 plugin实现。")]),a._v(" "),e("p",[e("img",{attrs:{src:t(480),alt:""}})]),a._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/1OyBkl5NnFO1q86L7GjQwg",target:"_blank",rel:"noopener noreferrer"}},[a._v("Babel介绍"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6844904008679686152",target:"_blank",rel:"noopener noreferrer"}},[a._v("Babel7"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"core-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-js"}},[a._v("#")]),a._v(" core-js")]),a._v(" "),e("h3",{attrs:{id:"core-js介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-js介绍"}},[a._v("#")]),a._v(" core-js介绍")]),a._v(" "),e("p",[a._v("其实core-js是我们能够使用新的API的最重要的包，然而一般情况它隐藏在webpack编译后的代码中，我们一般不会去查看，所以容易被遗忘，我们在webpack生成环境下，查看编译后的代码，可以看到例如includes就是从core-js导出到我们的代码去的。")]),a._v(" "),e("p",[e("img",{attrs:{src:t(481),alt:""}})]),a._v(" "),e("h4",{attrs:{id:"core-js是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-js是什么"}},[a._v("#")]),a._v(" core-js是什么")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("它是JavaScript标准库的polyfill")])]),a._v(" "),e("li",[a._v("它尽可能的进行模块化，让你能选择你需要的功能")]),a._v(" "),e("li",[e("strong",[a._v("它可以不污染全局空间")])]),a._v(" "),e("li",[a._v("它和babel高度集成，可以对core-js的引入进行最大程度的优化")])]),a._v(" "),e("h3",{attrs:{id:"core-js-3-特性概览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-js-3-特性概览"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://github.com/zloirock/core-js/blob/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md#babelpreset-env",target:"_blank",rel:"noopener noreferrer"}},[a._v("core-js@3 特性概览"),e("OutboundLink")],1)]),a._v(" "),e("ul",[e("li",[e("p",[a._v("支持ECMAScript稳定功能，引入core-js@3冻结期间的新功能，比如flat")])]),a._v(" "),e("li",[e("p",[a._v("加入到ES2016-ES2019中的提案，现在已经被标记为稳定功能")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("更新了提案的实现，增加了proposals配置项，由于提案阶段不稳定，需要谨慎使用")])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("增加了对一些web标准的支持，比如URL 和 URLSearchParams")])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("现在支持原型方法，同时不污染原型")])])]),a._v(" "),e("li",[e("p",[a._v("删除了过时的特性")])])]),a._v(" "),e("h3",{attrs:{id:"core-js-3与babel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-js-3与babel"}},[a._v("#")]),a._v(" core-js@3与babel")]),a._v(" "),e("p",[a._v("以前我们实现API的时候，会引入整个polyfill,其实polyfill只是包括了以下两个包")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("core-js")])]),a._v(" "),e("li",[e("code",[a._v("regenerator-runtime")])])]),a._v(" "),e("p",[e("code",[a._v("core-js@3")]),a._v("升级之后弃用了"),e("code",[a._v("@babel/polyfill")]),a._v("，以下是等价实现")]),a._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// babel.config.js")]),a._v("\npresets"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/preset-env"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    useBuiltIns"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"entry"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// or "usage"')]),a._v("\n    corejs"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"core-js/stable"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"regenerator-runtime/runtime"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br")])]),e("h4",{attrs:{id:"vue-cli3下-browserslistrc文件含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli3下-browserslistrc文件含义"}},[a._v("#")]),a._v(" vue/cli3下.browserslistrc文件含义")]),a._v(" "),e("p",[a._v("browserslist是用来配置项目的目标浏览器和nodejs版本范围，也就是通常说的兼容哪些浏览器的版本。")]),a._v(" "),e("ul",[e("li",[a._v('" >1%" :代表着全球超过1%人使用的浏览器')]),a._v(" "),e("li",[a._v("“last 2 versions” : 表示所有浏览器兼容到最后两个版本")]),a._v(" "),e("li",[a._v("“not ie <=8” :表示IE浏览器版本大于8（实则用npx browserslist 跑出来不包含IE9 ）")]),a._v(" "),e("li",[a._v("“safari >=7”:表示safari浏览器版本大于等于7")])]),a._v(" "),e("div",{staticClass:"language-.browserslistrc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> 1%\nlast 2 versions\nnot dead\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h2",{attrs:{id:"简述-webpack-工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简述-webpack-工作流程"}},[a._v("#")]),a._v(" 简述 webpack 工作流程")]),a._v(" "),e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),e("p",[e("strong",[a._v("Entry")]),a._v("：入口，Webpack 执行构建的第一步将从 Entry 开始，可抽象成输入。指示 webpack 应该使用哪个模块，来作为构建其内部 "),e("code",[a._v("依赖图(dependency graph)")]),a._v("的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。\n默认值是 "),e("code",[a._v("./src/index.js")]),a._v("，但你可以通过在"),e("code",[a._v("webpack configuration")]),a._v("中配置 entry 属性，来指定一个（或多个）不同的入口起点。")]),a._v(" "),e("p",[e("strong",[a._v("Output")]),a._v("：输出结果，Output属性告诉 webpack 在哪里输出它所创建的 bundle，以及如何命名这些文件。主要输出文件的默认值是 "),e("code",[a._v("./dist/main.js")]),a._v("，其他生成文件默认放置在 "),e("code",[a._v("./dist")]),a._v("文件夹中。")]),a._v(" "),e("p",[e("strong",[a._v("Loader")]),a._v("：模块转换器，用于把模块原内容按照需求转换成新内容，webpack 只能理解 JavaScript 和 JSON 文件，loader 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 模块，以供应用程序使用，以及被添加到依赖图中。\n在更高层面，在 webpack 的配置中，loader 有两个属性：1、"),e("code",[a._v("test")]),a._v(" 属性，识别出哪些文件会被转换。2、"),e("code",[a._v("use")]),a._v(" 属性，定义出在进行转换时，应该使用哪个 loader。\nLoader 本质上就是一个函数，对接收到的内容进行转换，返回转换后的结果。")]),a._v(" "),e("p",[e("strong",[a._v("Plugin")]),a._v("：扩展插件，loader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。Plugin 就是在 Webpack 的生命周期中进行各种操作，从而达到使用者目的插件。")]),a._v(" "),e("p",[e("strong",[a._v("mode")]),a._v(": 模式，通过选择 development, production 或 none 之中的一个，来设置 mode 参数，可以启用 webpack 内置在相应环境下的优化。其默认值为 production。")]),a._v(" "),e("p",[e("strong",[a._v("Module")]),a._v("：模块，在 Webpack 里一切皆模块，一个模块对应着一个文件。Webpack 会从配置的 Entry 开始递归找出所有依赖的模块。")]),a._v(" "),e("p",[a._v("webpack 模块能以各种方式表达它们的依赖关系。下面是一些示例：")]),a._v(" "),e("ul",[e("li",[a._v("ES2015 "),e("code",[a._v("import")]),a._v(" 语句")]),a._v(" "),e("li",[a._v("CommonJS "),e("code",[a._v("require()")]),a._v(" 语句")]),a._v(" "),e("li",[a._v("AMD "),e("code",[a._v("define")]),a._v(" 和 "),e("code",[a._v("require")]),a._v(" 语句")]),a._v(" "),e("li",[a._v("css/sass/less 文件中的 "),e("code",[a._v("@import")]),a._v(" 语句。")]),a._v(" "),e("li",[a._v("stylesheet "),e("code",[a._v("url(...)")]),a._v(" 或者 HTML "),e("code",[a._v("<img src=...>")]),a._v("文件中的图片链接。")])]),a._v(" "),e("p",[e("strong",[a._v("Chunk")]),a._v("：代码块，一个 Chunk 由多个模块组合而成，用于代码合并与分割。")]),a._v(" "),e("p",[e("code",[a._v("Chunk")]),a._v("是代码块的意思，Webpack在执行构建的时候，会把多个模块合并为一个文件，该文件就称为"),e("code",[a._v("Chunk")]),a._v("。")]),a._v(" "),e("p",[a._v("Webpack 会为每个生成的 "),e("code",[a._v("Chunk")]),a._v(" 取一个名称，"),e("code",[a._v("Chunk")]),a._v(" 的名称和 "),e("code",[a._v("Entry")]),a._v(" 的配置有关：")]),a._v(" "),e("ul",[e("li",[a._v("如果 "),e("code",[a._v("entry")]),a._v(" 是一个 "),e("code",[a._v("string")]),a._v(" 或 "),e("code",[a._v("array")]),a._v("，就只会生成一个 "),e("code",[a._v("Chunk")]),a._v("，这时 "),e("code",[a._v("Chunk")]),a._v("的名称是 "),e("code",[a._v("main")]),a._v("；")]),a._v(" "),e("li",[a._v("如果 "),e("code",[a._v("entry")]),a._v(" 是一个 "),e("code",[a._v("object")]),a._v("，就可能会出现多个 "),e("code",[a._v("Chunk")]),a._v("，这时 "),e("code",[a._v("Chunk")]),a._v("的名称是 "),e("code",[a._v("object")]),a._v(" 键值对里键的名称。")])]),a._v(" "),e("h3",{attrs:{id:"构建过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建过程"}},[a._v("#")]),a._v(" 构建过程")]),a._v(" "),e("p",[a._v("关于 webpack 的工作流程，简单来说可以概括为以下几步：")]),a._v(" "),e("ul",[e("li",[a._v("（1）初始化参数")])]),a._v(" "),e("p",[a._v("解析 Webpack 配置参数，合并 "),e("code",[a._v("Shell")]),a._v(" 传入和 "),e("code",[a._v("webpack.config.js")]),a._v(" 文件配置的参数，形成最后的配置结果。")]),a._v(" "),e("ul",[e("li",[a._v("（2）开始编译")])]),a._v(" "),e("p",[a._v("上一步得到的参数初始化 "),e("code",[a._v("compiler")]),a._v(" 对象，注册所有配置的插件，插件监听 Webpack 构建生命周期的事件节点，做出相应的反应，执行对象的 run 方法开始执行编译。")]),a._v(" "),e("ul",[e("li",[a._v("（3）确定入口")])]),a._v(" "),e("p",[a._v("从配置文件（ "),e("code",[a._v("webpack.config.js")]),a._v(" ）中指定的 "),e("code",[a._v("entry")]),a._v(" 入口，开始解析文件构建 "),e("code",[a._v("AST")]),a._v(" 语法树，找出依赖，递归下去。")]),a._v(" "),e("ul",[e("li",[a._v("（4）编译模块")])]),a._v(" "),e("p",[a._v("递归中根据"),e("code",[a._v("文件类型")]),a._v("和 "),e("code",[a._v("loader")]),a._v(" 配置，调用所有配置的 "),e("code",[a._v("loader")]),a._v(" 对文件进行转换，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理。")]),a._v(" "),e("ul",[e("li",[a._v("（5）完成模块编译并输出")])]),a._v(" "),e("p",[a._v("递归完后，得到每个文件结果，包含每个模块以及他们之间的依赖关系，根据 "),e("code",[a._v("entry")]),a._v(" 配置生成代码块 "),e("code",[a._v("chunk")]),a._v(" 。")]),a._v(" "),e("ul",[e("li",[a._v("（6）输出完成")])]),a._v(" "),e("p",[a._v("输出所有的 chunk 到文件系统。")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/NblP7A604kByp7pfdjcS0g",target:"_blank",rel:"noopener noreferrer"}},[a._v("简单实现"),e("OutboundLink")],1)]),a._v(" "),e("p",[a._v("精简流程")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("初始化：启动构建，读取与合并配置参数，加载 Plugin，实例化 Compiler。")])]),a._v(" "),e("li",[e("p",[a._v("编译：从 Entry 发出，针对每个 Module 串行调用对应的 Loader 去翻译文件内容，再找到该 Module 依赖的 Module，递归地进行编译处理。")])]),a._v(" "),e("li",[e("p",[a._v("输出：对编译后的 Module 组合成 Chunk，把 Chunk 转换成文件，输出到文件系统。")])])]),a._v(" "),e("p",[e("img",{attrs:{src:t(482),alt:""}})]),a._v(" "),e("h3",{attrs:{id:"常用loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用loader"}},[a._v("#")]),a._v(" 常用loader")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件，当引入的文件是 "),e("code",[a._v(".png")]),a._v("、"),e("code",[a._v(".txt")]),a._v("等时，可以通过 "),e("code",[a._v("file-loader")]),a._v(" 解析项目中的 "),e("code",[a._v("url")]),a._v("引入。根据配置将文件拷贝到相应的路径，并修改打包后文件的引入路径，让它指向正确的文件。;")])]),a._v(" "),e("li",[e("p",[a._v("url-loader："),e("code",[a._v("url-loader")]),a._v(" 封装了 "),e("code",[a._v("file-loader")]),a._v(" 且可以不依赖于 "),e("code",[a._v("file-loader")]),a._v(" 单独使用，并且可以配置 "),e("code",[a._v("limit")]),a._v("。对小于 limit 大小的图片转换成 "),e("code",[a._v("Base64")]),a._v("，大于 limit 的时候使用 file-loader 里的方法。")])]),a._v(" "),e("li",[e("p",[a._v("source-map-loader：加载额外的 Source Map 文件，以方便断点调试;")])]),a._v(" "),e("li",[e("p",[a._v("image-loader：加载并且压缩图片文件;")])]),a._v(" "),e("li",[e("p",[a._v("babel-loader：把 ES6 转换成 ES5;")])]),a._v(" "),e("li",[e("p",[a._v("css-loader：The css-loader interprets @import and url() like import/require() and will resolve them.负责处理 "),e("code",[a._v("@import")]),a._v("、"),e("code",[a._v("url")]),a._v(" 等语句。例如 "),e("code",[a._v("import css from 'file.css'")]),a._v("、"),e("code",[a._v("url(image.png)")]),a._v("支持模块化、压缩、文件导入等特性;把 CSS 代码注入到 JavaScript 中")])]),a._v(" "),e("li",[e("p",[a._v("style-loader：Inject CSS into the DOM，在 DOM 里插入一个 "),e("code",[a._v("<style>")]),a._v(" 标签，并且将 CSS 写入这个标签内;")])]),a._v(" "),e("li",[e("p",[a._v("postcss-loader：负责进一步处理 CSS 文件，比如添加浏览器前缀，压缩 CSS 等。")])]),a._v(" "),e("li",[e("p",[a._v("less-loader：将 .less 文件内容转换成 CSS。")])]),a._v(" "),e("li",[e("p",[a._v("sass-loader：将 .sass 文件内容转换成 CSS。")])]),a._v(" "),e("li",[e("p",[a._v("eslint-loader：通过 ESLint 检查 JavaScript 代码;")])])]),a._v(" "),e("h3",{attrs:{id:"常用plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用plugin"}},[a._v("#")]),a._v(" 常用plugin")]),a._v(" "),e("ul",[e("li",[a._v("clean-webpack-plugin：打包前自动清理 dist 目录，防止文件残留。")]),a._v(" "),e("li",[a._v("copy-webpack-plugin：将单个文件或者整个目录复制到构建目录")]),a._v(" "),e("li",[a._v("mini-css-extract-plugin：将 CSS 抽离出来单独打包并且通过配置可以设置是否压缩。")]),a._v(" "),e("li",[a._v("html-webpack-plugin：这个插件可以配置生成一个 HTML5 文件，其中 script 标签包含所有 Webpack 包。如果你设置多个入口点，你可以据此实现多页面应用打包。")]),a._v(" "),e("li",[a._v("webpack-bundle-analyzer：打包分析插件")])]),a._v(" "),e("h3",{attrs:{id:"热更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热更新"}},[a._v("#")]),a._v(" 热更新")]),a._v(" "),e("h4",{attrs:{id:"轻松理解webpack热更新原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轻松理解webpack热更新原理"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://mp.weixin.qq.com/s/2L9Y0pdwTTmd8U2kXHFlPA",target:"_blank",rel:"noopener noreferrer"}},[a._v("轻松理解webpack热更新原理"),e("OutboundLink")],1)]),a._v(" "),e("h4",{attrs:{id:"了不起的-webpack-hmr-学习指南-含源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#了不起的-webpack-hmr-学习指南-含源码分析"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5MDc4MzgxNA==&mid=2458455505&idx=1&sn=b6d5258393b5c41b77cdc78299e94697&chksm=b1c22df886b5a4eed560aa9aa95bc27d473d58ebabb501ec98c282bdbc8308e9951cea59a060&scene=178&cur_album_id=1556921519803596802#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("了不起的 Webpack HMR 学习指南（含源码分析）"),e("OutboundLink")],1)]),a._v(" "),e("p",[a._v("在 Webpack 的 webpack.config.js 中：")]),a._v(" "),e("ol",[e("li",[a._v("配置 devServer 的 hot 为 true")]),a._v(" "),e("li",[a._v("在 plugins 中增加 new webpack.HotModuleReplacementPlugin()")])]),a._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpack.config.js")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" webpack "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'webpack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//....")]),a._v("\n  devServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    hot"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("webpack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("HotModuleReplacementPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 热更新插件")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("p",[a._v("并且在入口文件配置：")]),a._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("module "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("accept")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h4",{attrs:{id:"热更新原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热更新原理"}},[a._v("#")]),a._v(" 热更新原理")]),a._v(" "),e("p",[e("code",[a._v("HMR")]),a._v("（Hot Module Replacement） 的核心就是客户端从服务端拉去更新后的文件，准确的说是 "),e("code",[a._v("chunk diff")]),a._v("（chunk 需要更新的部分）。\n实际上 "),e("code",[a._v("webpack-dev-server（WDS）")]),a._v("与浏览器之间维护了一个"),e("code",[a._v("Websocket")]),a._v("，当本地资源发生变化时，"),e("code",[a._v("WDS")]),a._v(" 会向浏览器推送更新，并带上构建时的 "),e("code",[a._v("hash")]),a._v("，让客户端与上一次资源进行对比。\n客户端对比出差异后会向 "),e("code",[a._v("WDS")]),a._v(" 发起"),e("code",[a._v("Ajax")]),a._v(" 请求来获取更改内容（文件列表、hash），这样客户端就可以再借助这些信息继续向 "),e("code",[a._v("WDS")]),a._v(" 发起 "),e("code",[a._v("jsonp")]),a._v(" 请求获取该 "),e("code",[a._v("chunk")]),a._v(" 的增量更新。\n后续的部分（拿到增量更新之后如何处理？哪些状态该保留？哪些又需要更新？）由 "),e("code",[a._v("HotModulePlugin")]),a._v(" 来完成，提供了相关 API 以供开发者针对自身场景进行处理，像 "),e("code",[a._v("react-hot-loader")]),a._v(" 和 "),e("code",[a._v("vue-loader")]),a._v(" 都是借助这些 API 实现 HMR。")]),a._v(" "),e("h3",{attrs:{id:"_3-种-hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-种-hash"}},[a._v("#")]),a._v(" 3 种 hash")]),a._v(" "),e("p",[a._v("文件指纹是打包后输出的文件名的后缀，对应着 3 种 hash。")]),a._v(" "),e("ol",[e("li",[e("code",[a._v("hash")]),a._v("是跟整个项目的构建相关，只要项目里有文件更改，整个项目构建的 "),e("code",[a._v("hash")]),a._v(" 值都会更改，并且全部文件都共用相同的 "),e("code",[a._v("hash")]),a._v(" 值。（粒度: 整个项目）")]),a._v(" "),e("li",[e("code",[a._v("chunkhash")]),a._v("是根据不同的入口进行依赖文件解析，构建对应的 chunk（模块），生成对应的 hash 值。只有被修改的 chunk（模块）在重新构建之后才会生成新的 hash 值，不会影响其它的 chunk。（粒度:entry 的每个入口文件）")]),a._v(" "),e("li",[e("code",[a._v("contenthash")]),a._v(" 是跟每个生成的文件有关，每个文件都有一个唯一的 hash 值。当要构建的文件内容发生改变时，就会生成新的 hash 值，且该文件的改变并不会影响和它同一个模块下的其它文件。（粒度: 每个文件的内容）")])]),a._v(" "),e("h3",{attrs:{id:"code-splitting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-splitting"}},[a._v("#")]),a._v(" Code Splitting")]),a._v(" "),e("p",[a._v("webpack 4 废弃了之前的不怎么好用的 "),e("code",[a._v("CommonsChunk")]),a._v("，取而代之的是 "),e("code",[a._v("SplitChunks")]),a._v("。")]),a._v(" "),e("p",[a._v("首先 webpack 总共提供了三种办法来实现 Code Splitting，如下：")]),a._v(" "),e("ul",[e("li",[a._v("入口配置：entry 入口使用多个入口文件；")]),a._v(" "),e("li",[a._v("抽取公有代码：使用 SplitChunks 抽取公有代码；")]),a._v(" "),e("li",[a._v("动态加载 ：动态加载一些代码。")])]),a._v(" "),e("h4",{attrs:{id:"splitchunks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks"}},[a._v("#")]),a._v(" SplitChunks")]),a._v(" "),e("p",[a._v("默认配置")]),a._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n  optimization"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    splitChunks"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      chunks"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'async'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" \n      minSize"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("30000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      maxSize"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      minChunks"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      maxAsyncRequests"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      maxInitialRequests"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      automaticNameDelimiter"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'~'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      cacheGroups"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        vendors"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          test"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[a._v("[\\\\/]node_modules[\\\\/]")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n          priority"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          minChunks"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n          priority"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n          reuseExistingChunk"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br")])]),e("p",[a._v("参数说明如下：")]),a._v(" "),e("ul",[e("li",[a._v("chunks：表示从哪些chunks里面抽取代码，除了三个可选字符串值 initial、async、all 之外，还可以通过函数来过滤所需的 chunks；")]),a._v(" "),e("li",[a._v("minSize：表示抽取出来的文件在压缩前的最小大小，默认为 30000；")]),a._v(" "),e("li",[a._v("maxSize：表示抽取出来的文件在压缩前的最大大小，默认为 0，表示不限制最大大小；")]),a._v(" "),e("li",[a._v("minChunks：表示被引用次数，默认为1；")]),a._v(" "),e("li",[a._v("maxAsyncRequests：最大的按需(异步)加载次数，默认为 5；")]),a._v(" "),e("li",[a._v("maxInitialRequests：最大的初始化加载次数，默认为 3；")]),a._v(" "),e("li",[a._v("automaticNameDelimiter：抽取出来的文件的自动生成名字的分割符，默认为 ~；")]),a._v(" "),e("li",[a._v("name：抽取出来文件的名字，默认为 true，表示自动生成文件名；")]),a._v(" "),e("li",[a._v("cacheGroups: 缓存组。（这才是配置的关键）")])]),a._v(" "),e("h4",{attrs:{id:"cachegroups"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups"}},[a._v("#")]),a._v(" cacheGroups")]),a._v(" "),e("p",[a._v("它可以继承/覆盖上面 splitChunks 中所有的参数值，除此之外还额外提供了三个配置，分别为：test, priority 和 reuseExistingChunk。")]),a._v(" "),e("ul",[e("li",[a._v("test: 表示要过滤 modules，默认为所有的 modules，可匹配模块路径或 chunk 名字，当匹配的是 chunk 名字的时候，其里面的所有 modules 都会选中；")]),a._v(" "),e("li",[a._v("priority：表示抽取权重，数字越大表示优先级越高。因为一个 module 可能会满足多个 cacheGroups 的条件，那么抽取到哪个就由权重最高的说了算；")]),a._v(" "),e("li",[a._v("reuseExistingChunk：表示是否使用已有的 chunk，如果为 true 则表示如果当前的 chunk 包含的模块已经被抽取出去了，那么将不会重新生成新的。")])]),a._v(" "),e("h3",{attrs:{id:"理解webpack4-splitchunks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理解webpack4-splitchunks"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/kwzm/p/10314438.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("理解webpack4.splitChunks"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"optimization-splitchunks-中-chunks-的3个值-all、async、initial-的含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optimization-splitchunks-中-chunks-的3个值-all、async、initial-的含义"}},[a._v("#")]),a._v(" optimization.splitChunks 中，chunks 的3个值：all、async、initial 的含义")]),a._v(" "),e("ul",[e("li",[a._v("async表示只从异步加载得模块（动态加载import()）里面进行拆分")]),a._v(" "),e("li",[a._v("initial表示只从入口模块进行拆分")]),a._v(" "),e("li",[a._v("all表示以上两者都包括")])]),a._v(" "),e("p",[a._v("chunks有三个选项：initial、async和all。它指示应该优先分离同步（initial）、异步（async）还是所有的代码模块。这里的异步指的是通过动态加载方式（import()）加载的模块。")]),a._v(" "),e("p",[a._v("这里的重点是优先二字。以async为例，假如你有两个模块 a 和 b，两者都引用了 jQuery，但是 a 模块还通过动态加载的方式引入了 lodash。那么在 async 模式下，插件在打包时会分离出lodash~for~a.js的 chunk 模块，而 a 和 b 的公共模块 jQuery 并不会被（优化）分离出来，所以它可能还同时存在于打包后的a.bundle.js和b.bundle.js文件中。因为async告诉插件优先考虑的是动态加载的模块")])])}),[],!1,null,null,null);s.default=r.exports}}]);